name: "Deploy Allset Web Application"
description: "Combines all of the common steps for deploying a hosted web application in the Allset ecosystem."

inputs:
  environment:
    description: "The environment name being deployed (edge, staging, production)"
    required: true
  release_version:
    description: "The version string to associate with this release"
    required: true

  firebase_token:
    description: "The CI Token used to interact with Firebase"
    required: true
  firebase_project:
    description: "The name of the Firebase hosting project being deployed to"
    required: true

  sentry_org:
    description: "The Sentry organization ID to interact with"
    required: true
  sentry_project:
    description: "The Sentry project ID to create a new release in"
    required: true
  sentry_auth_token:
    description: "Authentication token to interact with Sentry"
    required: true

  package_token:
    description: "The Github packages token to use for private NPM Repos"
    required: true

runs:
  using: "composite"
  steps:
    - name: Clean release version for Sentry
      shell: bash
      run: |
        ref="${input_release_version////-}"
        echo $ref
        echo "::set-env name=release_version::$ref"
      env:
        input_release_version: ${{ inputs.release_version }}
        ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"

    - name: Build and deploy firebase
      uses: AllsetHQ/action-deploy-firebase-hosting@main
      with:
        environment: ${{ inputs.environment }}
        release_version: ${{ env.release_version }}
        firebase_token: ${{ inputs.firebase_token }}
        firebase_project: ${{ inputs.firebase_project }}
        package_token: ${{ inputs.package_token }}

    - name: Create Sentry release
      uses: getsentry/action-release@v1
      env:
        SENTRY_ORG: ${{ inputs.sentry_org }}
        SENTRY_PROJECT: ${{ inputs.sentry_project }}
        SENTRY_AUTH_TOKEN: ${{ inputs.sentry_auth_token }}
      with:
        environment: ${{ inputs.environment }}
        version: ${{ env.release_version }}
        sourcemaps: './dist'
        ignore_missing: true
        ignore_empty: true
